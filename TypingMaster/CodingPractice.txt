#include<vector>
#include<string>
#include<iostream>
#include<algorithm>
#using namespace std;

#define MOD 1234567890
int dp[3456][789][149];

int main(void)
{
for(int i=0; i<X; i++)
for(int j=0; j<Y; j++)
for(int k=0; k<Z; k++)
{
int ans=0;
bool ok=false;
double a=1.5, b, c, d;
string s="test";

if(i>=19 || j<=34 && k>=73)
{
dp[0][0][0] += (i-j+k);
dp[1][5][3] -= (i*j/k);
dp[3][6][4] |= !(i&j^k);
}

if(i!=0 && j!=0 && k!=0)
{
dp[i][j][k] *= (i*j/k);
}

if(i && j && k)
{
dp[i][j][k] %= dp[0][0][k];	
}

return i?j:k;
}

for(int i=X-1; i>=0; i--)
for(int j=Y-1; j>=0; j--)
for(int k=Z-1; k>=0; k--)
{
int ans=0;
bool ok=false;
double a=1.5, b, c, d;
vector<int> a;
vector<int,int> b;
a.push_back(i^j^k);

if(i>=19 || j<=34 && k>=73)
{
dp[0][0][0] += (i-j+k);
dp[1][5][3] -= (i*j/k);
dp[3][6][4] |= !(i&j^k);
}

if(i!=0 && j!=0 && k!=0)
{
dp[i][j][k] *= (i*j/k);
}

if(i && j && k)
{
dp[i][j][k] %= dp[0][0][k];	
}

return i?j:k;	
}

switch(i|j&k)
{
case 34: dp[0][0][0] = 0;
break;
}

while(dp[0][0][0])
{
dp[0][0][0] *= i%j;
}

return ans;
}
